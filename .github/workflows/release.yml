name: Build & Release Docker Image

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get latest tag and compute next patch
      id: get_tag
      run: |
        git fetch --tags
        latest_tag=$(git tag --sort=-v:refname | grep '^v' | head -n 1)
        echo "Latest tag: $latest_tag"
        if [ -z "$latest_tag" ]; then
          echo "version=0.0.1" >> $GITHUB_OUTPUT
        else
          IFS='.' read -r major minor patch <<< "${latest_tag#v}"
          patch=$((patch + 1))
          echo "version=${major}.${minor}.${patch}" >> $GITHUB_OUTPUT
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.get_tag.outputs.version }}
        name: Release v${{ steps.get_tag.outputs.version }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          smssexe/quran:latest
          smssexe/quran:${{ steps.get_tag.outputs.version }}
          smssexe/quran:v${{ steps.get_tag.outputs.version }}

    - name: Send Telegram message (optional)
      if: ${{ secrets.TELEGRAM_BOT_TOKEN && secrets.TELEGRAM_CHAT_ID }}
      run: |
        STATUS="✅ Build and Release Successful!"
        if [ "${{ job.status }}" != "success" ]; then
          STATUS="❌ Build or Release Failed!"
        fi
        MESSAGE="[$STATUS] Repo: $REPO%0AWorkflow: $WORKFLOW%0ARef: $REF%0ACommit: $SHA%0ABy: $ACTOR%0AVersion: $VERSION"
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d text="$MESSAGE"
      env:
        REPO: ${{ github.repository }}
        WORKFLOW: ${{ github.workflow }}
        REF: ${{ github.ref_name }}
        SHA: ${{ github.sha }}
        ACTOR: ${{ github.actor }}
        VERSION: ${{ steps.get_tag.outputs.version }}
